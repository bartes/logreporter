%html{:xmlns => "http://www.w3.org/1999/xhtml", "xml:lang" => "en", :lang => "en"}
  %head
    %script{:language => "javascript", :type => "text/javascript", :src => "jquery-1.5.2.min.js"}
    %script{:language => "javascript", :type => "text/javascript", :src => "jquery.flot.min.js"}
    :css
      body {
        font: normal 11px auto "Trebuchet MS", Verdana, Arial, Helvetica, sans-serif;
        color: #4f6b72;
        background: #E6EAE9;
        padding-left:20px;
        padding-top:20px;
        padding-bottom:20px;
      }

      a {
        color: #c75f3e;
      }

      .color_bar {
        border: 1px solid;
        height:10px;
        background: #CAE8EA;
      }

      #mytable {
        width: 700px;
        padding: 0;
        margin: 0;
        padding-bottom:10px;
      }

      caption {
        padding: 0 0 5px 0;
        width: 700px;
        font: italic 11px "Trebuchet MS", Verdana, Arial, Helvetica, sans-serif;
        text-align: right;
      }

      th {
        font: bold 11px "Trebuchet MS", Verdana, Arial, Helvetica, sans-serif;
        color: #4f6b72;
        border-right: 1px solid #C1DAD7;
        border-bottom: 1px solid #C1DAD7;
        border-top: 1px solid #C1DAD7;
        letter-spacing: 2px;
        text-transform: uppercase;
        text-align: left;
        padding: 6px 6px 6px 12px;
        background: #CAE8EA no-repeat;
      }

      td {
        font: bold 11px "Trebuchet MS", Verdana, Arial, Helvetica, sans-serif;
        border-right: 1px solid #C1DAD7;
        border-bottom: 1px solid #C1DAD7;
        background: #fff;
        padding: 6px 6px 6px 12px;
        color: #4f6b72;
      }

      td.alt {
        background: #F5FAFA;
        color: #797268;
      }
      table.longest_by_avg {
      }
      table.longest_by_sum {
      }
  %body
    %h1= "Logreporter's summary for #{date.strftime('%Y.%m.%d')}"
    %div.today
      %h2 Request summary
      %table{:cellspacing => 0}
        %tbody
          %tr
            %td Number of requests
            %td= no_of_requests
          %tr
            %td.alt Average request duration
            %td.alt= duration_average.round(2)
          %tr
            %td Average view rendering duration
            %td= view_average.round(2)
          %tr
            %td.alt Average database response duration
            %td.alt= db_average.round(2)
      %h2 Most requested
      %table{:cellspacing => 0}
        %tbody
          %tr
            %th action
            %th hits
            %th{:colspan => 2} percentage
          - most_requested.each_with_index do |x,i|
            - style = i.odd? ? 'alt' : nil
            - percentage = (x['request_id_count'].to_i * 100 / no_of_requests)
            %tr
              %td{:class => style}= "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
              %td{:class => style}= x['request_id_count']
              %td{:class => style}= "#{percentage.round(2)}%"
              %td{:class => style,:style=>"width:100px"}
                %div.color_bar{:style => "width:#{percentage.round}px"}
      %h2 Request durations
      - titles = {:duration => 'Request duration', :view => 'View rendering time', :db => 'Database time'}
      - [:duration, :view, :db].each do |i|
        - title = titles[i]
        - [:longest_by_avg, :longest_by_sum].each do |by|
          - sort_type = by.to_s.split('_')[1,2].join(' ')
          %table{:cellspacing => 0, :class => by }
            %tbody
              %tr
                %th= "#{title} - #{sort_type}"
                %th hits
                %th min
                %th max
                %th average
                %th sum
              - self.send(:"#{i}_#{by}").each_with_index do |x,y|
                - style = y.odd? ? 'alt' : nil
                %tr
                  %td{:class => style}= "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
                  %td{:class => style}= x["#{i}_hits"]
                  %td{:class => style}= "#{x["min_#{i}"].to_f.round(2)}s"
                  %td{:class => style}= "#{x["max_#{i}"].to_f.round(2)}s"
                  %td{:class => style}= "#{x["average_#{i}"].to_f.round(2)}s"
                  %td{:class => style}= "#{x["sum_#{i}"].to_f.round(2)}s"
          %br
      %h2 Process Blockers by Action (> 1 sec duration)
      %table{:cellspacing => 0}
        %tbody
          %tr
            %th action
            %th hits
            %th{:colspan => 2} percentage
          - blockers.each_with_index do |x,y|
            - style = y.odd? ? 'alt' : nil
            %tr
              %td{:class => style}= "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
              %td{:class => style}= x['duration_hits']
              %td{:class => style}= "#{x['percentage']}%"
              %td{:class => style, :style=> "width:100px;"}
                %div.color_bar{:style => "width:#{x['percentage'].to_f.round}px"}
      %h2 Process Blockers by Path
      %table{:cellspacing => 0}
        %tbody
          %tr
            %th action
            %th duration
            %th hour
          - blocker_requests.each_with_index do |x,y|
            - style = y.odd? ? 'alt' : nil
            %tr
              %td{:class => style}= x['url']
              %td{:class => style}= x['duration']
              %td{:class => style}= "#{x['timestamp'].to_s[6..7]}:#{x['timestamp'].to_s[8..9]}:#{x['timestamp'].to_s[10..11]}"
      %h2 Most valuable actions
      %table{:cellspacing => 0}
        %tbody
          %tr
            %th Action
            %th Average duration
            %th Average database time
            %th Average view rendering time
          - top_actions.each_with_index do |top,i|
            - style = i.odd? ? 'alt' : nil
            - x = top['action'] 
            %tr
              %td{:class => style}= "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
              %td{:class => style}= top['results'].first['average_duration'].to_f.round(2)
              %td{:class => style}= top['results'].first['average_db'].to_f.round(2)
              %td{:class => style}= top['results'].first['average_view'].to_f.round(2)
      %h2 Most valuable actions Average Request Time distributed per hour
      %table#distribution{:cellspacing => 0}
        %tbody
          %tr
            %th Action
            - (0..23).each do |i|
              %th= "#{i.to_s.rjust(2,'0')}:00-#{i.to_s.rjust(2,'0')}:59"
          - top_actions_distribution.each_with_index do |top, i|
            - style = i.odd? ? 'alt' : nil
            - x = top['action'] 
            %tr{:class => ("distItem" if x['chart'])}
              %td{:class => style}= x['controller'].nil? ? ( !x['controller_group'].nil? ? "Api" : "All") : "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
              - top['results'].each_with_index do |result, index|
                %td{:class => style,  :"data-value" => result.first['average_duration'].to_f.round(2), :"data-hour" => index.to_s.rjust(2,'0')}= result.first['average_duration'].to_f.round(2)
      %h2 Most valuable actions Total Hits distributed per hour
      %table{:cellspacing => 0}
        %tbody
          %tr
            %th Action
            - (0..23).each do |i|
              %th= "#{i.to_s.rjust(2,'0')}:00-#{i.to_s.rjust(2,'0')}:59"
          - top_actions_distribution.each_with_index do |top,i|
            - style = i.odd? ? 'alt' : nil
            - x = top['action']
            %tr
              %td{:class => style}= x['controller'].nil? ? ( !x['controller_group'].nil? ? "Api" : "All") : "#{x['controller']}##{x['action']}.#{x['format'].to_s.downcase}"
              - top['results'].each do |result|
                %td{:class => style}= result.first['total_hits'] || 0
      %br
      %h2 Most valuable actions Average Request Time distributed per hour - Graph
      %div{:class => "chart", :id => "chart", :style => "width:800px;height:300px;"}
      :javascript
        $(function () {
            function showTooltip(x, y, contents) {
                $('<div id="tooltip">' + contents + '</div>').css( {
                    position: 'absolute',
                    display: 'none',
                    top: y + 5,
                    left: x + 5,
                    border: '1px solid #fdd',
                    padding: '2px',
                    'background-color': '#fee',
                    opacity: 0.80
                }).appendTo("body").fadeIn(200);
            };
            var result_charts = $("#distribution .distItem");
            xticks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];
            result = []
            $.each(result_charts, function(i) {
              var chart_data = [];
              $(this).find('td[data-hour]').each(function(){
                chart_data.push( [$(this).data("hour"), $(this).data("value")]);
              })
              result.push({label: $(this).find("td:first").text(), data: chart_data});
             });
             var options = {
                  lines: { show: true },
                  points: { show: true },
                  xaxis: {
                    ticks: xticks
                  },
                  legend : {
                    margin: [-260, 0]
                  },
                  grid: { hoverable: true }
              };
             var previousPoint = null
             $.plot($("#chart"), result, options);
             $("#chart").bind("plothover", function (event, pos, item) {
                if (item) {
                    if (previousPoint != item.dataIndex) {
                        previousPoint = item.dataIndex;
                        $("#tooltip").remove();
                        var x = item.datapoint[0],
                            y = item.datapoint[1].toFixed(2);
                        showTooltip(item.pageX, item.pageY,
                                    item.series.label + " from "+ x + ":00-"+ x + ":59 is " + y + "s");
                    }
                }
                else {
                    $("#tooltip").remove();
                    previousPoint = null;
                }
              });
            });

